import{S as lr,i as ir,s as rr,C as Wp,k as c,w as cr,M as ur,d as e,m as u,x as dr,g as r,y as hr,z as fr,A as xi,q as Di,o as Ci,B as kr,P as Ai,F as mr,e as p,t as a,c as l,a as i,h as n,b as d,H as s,I as vr,J as yr,K as wr}from"../../chunks/vendor-ec91eb1f.js";import{B as br}from"../../chunks/BlogLayout-2f12ce4e.js";import"../../chunks/Bio-da710757.js";function gr(L){let f,y,D,m,C,h,_,Rt,X,Ha,Ma,hs,Wt,Sa,fs,Yt,qa,ks,B,La,Z,Ra,Wa,ms,tt,Bt,Ya,vs,N,Ba,ke,Na,$a,ys,et,Ti=`<code class="language-bash"><span class="token function">npm</span> init svelte@next <span class="token operator">&lt;</span>project_name<span class="token operator">></span>
<span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>project_name<span class="token operator">></span>
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run dev -- --open</code>`,ws,R,Fa,me,Ga,za,ve,Ja,bs,Nt,Ka,gs,w,Ua,ye,Qa,Va,we,Xa,Za,be,tn,en,ge,sn,an,_s,st,$t,nn,Es,at,Ii='<code class="language-bash">npx svelte-add mdsvex</code>',js,T,_e,on,pn,Ee,ln,rn,je,cn,un,Ps,Ft,dn,xs,I,hn,Pe,fn,kn,xe,mn,vn,As,nt,Gt,yn,Os,zt,wn,Ds,H,bn,Ae,gn,_n,Oe,En,jn,Cs,j,Pn,De,xn,An,Ce,On,Dn,Te,Cn,Tn,Ts,ot,Hi=`<code class="language-javascript"><span class="token keyword">interface</span> <span class="token class-name">Post</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">created</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
	<span class="token literal-property property">slug</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">dateSort</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> Post<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> Post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	<span class="token comment">// have to use getTime to satisfy typescript</span>
	<span class="token comment">// And if i make this file a js file, the endpoint is not detected since</span>
	<span class="token comment">// it's a typescript svelte project</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>created<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>created<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token function-variable function">RequestHandler</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">'./**/*.md'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>


	<span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
		Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>modules<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>_<span class="token punctuation">,</span> module<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
			<span class="token keyword">const</span> <span class="token punctuation">&#123;</span> metadata <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">module</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			posts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>metadata<span class="token punctuation">)</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
	<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// Newest first</span>
	posts<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dateSort<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
		<span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
			<span class="token literal-property property">posts</span><span class="token operator">:</span> posts
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Is,$,In,Ie,Hn,Mn,Hs,pt,Mi=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>module<span class="token punctuation">"</span></span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token comment">/**
	 * @type &#123;import('@sveltejs/kit').Load&#125;
	 */</span>
	<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> page<span class="token punctuation">,</span> fetch <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
		<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'/blog.json'</span><span class="token punctuation">)</span>

		<span class="token keyword">const</span> <span class="token punctuation">&#123;</span>posts<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
			<span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
				posts
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`,Ms,Jt,Sn,Ss,Kt,qn,qs,lt,Si=`<code class="language-undefined">---
title: Make a blog with svelte kit and host on github
date: &#39;2021-05-18&#39;
slug: &#39;2021-05-81-make-blog-with-sveltekit&#39;
---</code>`,Ls,Ut,Ln,Rs,it,qi=`<code class="language-json"><span class="token punctuation">&#123;</span>
	title<span class="token operator">:</span> Make a blog with svelte kit and host on github<span class="token punctuation">,</span>
	date<span class="token operator">:</span> '<span class="token number">2021</span><span class="token number">-05</span><span class="token number">-18</span>'<span class="token punctuation">,</span>
	slug<span class="token operator">:</span> '<span class="token number">2021</span><span class="token number">-05</span><span class="token number">-81</span>-make-blog-with-sveltekit'<span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,Ws,Qt,Rn,Ys,rt,Li=`<code class="language-html">&#123;#each posts as post&#125;
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prefetch<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blog/&#123;post.metadata.slug&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>
				&#123;post.metadata.title&#125;
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
&#123;/each&#125;</code>`,Bs,ct,Vt,Wn,Ns,M,Yn,He,Bn,Nn,$n,$s,ut,Ri=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">max-width</span><span class="token punctuation">:</span> 42rem<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>auto</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>logo logo-big<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> unstack.in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span></code>`,Fs,dt,Fn,ht,Gn,Gs,ft,Xt,zn,zs,Zt,Jn,Js,P,Kn,Me,Un,Qn,Se,Vn,Xn,qe,Zn,to,Ks,kt,eo,Le,so,Us,mt,Wi=`<code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		<span class="token literal-property property">blog</span><span class="token operator">:</span> <span class="token string">'./src/lib/BlogLayout.svelte'</span>
	<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
	<span class="token comment">// rest of the mdsvex config file</span>
<span class="token punctuation">&#125;</span></code>`,Qs,te,ao,Vs,vt,Yi=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> PostHeader <span class="token keyword">from</span> <span class="token string">'$lib/PostHeader.svelte'</span><span class="token punctuation">;</span>
	<span class="token comment">// if i don't add the exports here, i can't access title and date as props</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> title<span class="token punctuation">;</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> date<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PostHeader</span> <span class="token attr-name">&#123;title&#125;</span> <span class="token attr-name">&#123;date&#125;</span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`,Xs,ee,no,Zs,W,oo,Re,po,lo,yt,io,ta,wt,se,ro,ea,F,co,bt,uo,ho,sa,gt,fo,_t,ko,aa,Et,ae,mo,na,ne,vo,oa,jt,Bi='<code class="language-bash"><span class="token function">npm</span> i -D @sveltejs/adapter-static@next</code>',pa,oe,yo,la,Pt,Ni=`<code class="language-javascript"><span class="token keyword">import</span> staticAdapter <span class="token keyword">from</span> <span class="token string">'@sveltejs/adapter-static'</span><span class="token punctuation">;</span>

<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.svelte'</span><span class="token punctuation">,</span> <span class="token operator">...</span>mdsvexConfig<span class="token punctuation">.</span>extensions<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token comment">// Consult https://github.com/sveltejs/svelte-preprocess</span>
	<span class="token comment">// for more information about preprocessors</span>
	<span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">mdsvex</span><span class="token punctuation">(</span>mdsvexConfig<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

	<span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		<span class="token literal-property property">adapter</span><span class="token operator">:</span> <span class="token function">staticAdapter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
			<span class="token comment">// default options are shown</span>
			<span class="token literal-property property">pages</span><span class="token operator">:</span> <span class="token string">'build'</span><span class="token punctuation">,</span>
			<span class="token literal-property property">assets</span><span class="token operator">:</span> <span class="token string">'build'</span><span class="token punctuation">,</span>
			<span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token keyword">null</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token comment">// hydrate the &lt;div id="svelte"> element in src/app.html</span>
		<span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">'#svelte'</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,ia,xt,pe,wo,ra,G,bo,We,go,_o,ca,At,$i=`<code class="language-undefined">npm run build
cd build
npx serve</code>`,ua,x,Eo,Ye,jo,Po,Be,xo,Ao,Ne,Oo,Do,da,Ot,le,Co,ha,z,To,$e,Io,Ho,fa,Y,Fe,Mo,So,Ge,qo,Lo,ka,Dt,Fi='<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -D gh-pages</code>',ma,ie,Ro,va,Ct,Gi=`<code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
	<span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"npm run build &amp;&amp; gh-pages -b master -d build -t"</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
</code>`,ya,A,Wo,ze,Yo,Bo,Je,No,$o,Ke,Fo,Go,wa,Tt,Ue,zo,Jo,ba,It,J,Ko,Qe,Uo,Qo,ga,v,Vo,Ve,Xo,Zo,Xe,tp,ep,Ze,sp,ap,Ht,np,op,Mt,pp,lp,_a,b,ip,ts,rp,cp,es,up,dp,ss,hp,fp,as,kp,mp,Ea,k,vp,ns,yp,wp,os,bp,gp,ps,_p,Ep,ls,jp,Pp,is,xp,Ap,rs,Op,Dp,ja,re,Cp,Pa,St,Tp,qt,Ip,ce;const Hp=L[1].default,E=mr(Hp,L,L[2],null);return{c(){f=p("p"),y=a("After reading this post, you should be able to make a blog using svelte kit, and host it on github or any other hosting service of your choice. You can write your posts as markdown files."),D=c(),m=p("p"),C=a("This post assumes that you know what svelte is and also what hosting a static site means. You can read more about svelte here - "),h=p("a"),_=a("https://svelte.dev."),Rt=a(" And more about svelte kit here - "),X=p("a"),Ha=a("https://kit.svelte.dev"),Ma=a("."),hs=c(),Wt=p("p"),Sa=a("I recently moved by teeny tiny unmaintained blog from gatsby to svelte kit. Removing gatsby removed a lot of complexity which comes with gatsby. I no longer understood what was going on under the hood and was too scared to upgrade gatsby."),fs=c(),Yt=p("p"),qa=a("Switching to svelte-kit was relatively straight forward except for a few quirks. The quirks mainly had to do with rendering markdown as html and figuring out how to publish the final site through github."),ks=c(),B=p("p"),La=a("If you don\u2019t want to read the whole article, you can checkout the final code here - "),Z=p("a"),Ra=a("https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),Wa=a("."),ms=c(),tt=p("h3"),Bt=p("a"),Ya=a("Step 1 - Setup svelte kit template"),vs=c(),N=p("p"),Ba=a("You can get started with svelte kit template using their "),ke=p("code"),Na=a("npm init"),$a=a(" command -"),ys=c(),et=p("pre"),ws=c(),R=p("p"),Fa=a("When you run "),me=p("code"),Ga=a("npm init svelte@next <your_project_name>"),za=a(", you will be asked a set of questions. E.g. Do you want to enable typescript in this project? Once you answer all the questions, the command will create a set of files in the "),ve=p("your_project_name"),Ja=a("folder. Think of the command as a helper which chooses the right template for you."),bs=c(),Nt=p("p"),Ka=a("Once the init command creates the files, you can go inside the folder and install the npm dependencies. The init command does not install the dependencies. It only specifies the list of dependencies in the package.json file."),gs=c(),w=p("p"),Ua=a("After the dependencies are installed, you can invoke the "),ye=p("code"),Qa=a("dev"),Va=a(" script which is already defined in your "),we=p("code"),Xa=a("package.json"),Za=a(" file by the "),be=p("code"),tn=a("init"),en=a(" command - "),ge=p("code"),sn=a("npm run dev -- --open"),an=a(". This should start a localhost server on port 3000."),_s=c(),st=p("h3"),$t=p("a"),nn=a("Step 2 - Add mdsvex to convert markdown files to html"),Es=c(),at=p("pre"),js=c(),T=p("p"),_e=p("code"),on=a("svelte-add mdsvex"),pn=a(" will make necessary changes to "),Ee=p("code"),ln=a("package.json"),rn=a(" to add the required dependencies, add a mdsvex config file and change the "),je=p("code"),cn=a("svelte.config"),un=a(" file to add mdsvex as a preprocessor."),Ps=c(),Ft=p("p"),dn=a("You will have to restart the dev server for mdsvex preprocessor to kick in."),xs=c(),I=p("p"),hn=a("Try adding a markdown file in your routes folder and going to the route pointed by the markdown file name. E.g. Add a file "),Pe=p("code"),fn=a("src/routes/my-awesome-post.md"),kn=a(" and put some content in there. You should be able to view that content on "),xe=p("code"),mn=a("localhost:3000/my-awesome-post"),vn=a("."),As=c(),nt=p("h3"),Gt=p("a"),yn=a("Step 3 - Show a list of all blog posts on home page"),Os=c(),zt=p("p"),wn=a("We want to collect all our markdown files and show the list of blog posts on the home page or on some other path, so that our users can browse the super amazing content we publish."),Ds=c(),H=p("p"),bn=a("We will use "),Ae=p("code"),gn=a("import.meta.glob"),_n=a(" to get the metadata for each of the markdown files. We will create an endpoint to get the metadata for a post. If we try to get the metadata using a glob pattern in our "),Oe=p("code"),En=a("routes/index.svelte"),jn=a(" file, it will load all the blog posts upfront too. Which might be a disaster if we have too many blogs posts or our posts are heavy."),Cs=c(),j=p("p"),Pn=a(`So we create an endpoint which returns the metadata for blogs in
`),De=p("code"),xn=a("/src/routes/blog/index.json.ts"),An=a(` file. It won\u2019t work if you name your file
`),Ce=p("code"),On=a("index.json.js"),Dn=a(" and had selected typescript when creating the project with "),Te=p("code"),Cn=a("npm init svelte@next"),Tn=a("."),Ts=c(),ot=p("pre"),Is=c(),$=p("p"),In=a("And then fetch the metadata for a post in our "),Ie=p("code"),Hn=a("src/routes/index.svelte"),Mn=a(` file, or
wherever you show the list of blog posts.`),Hs=c(),pt=p("pre"),Ms=c(),Jt=p("p"),Sn=a(`Does having an endpoint mean that we need a server too? Ans - No. When we run
the build script, which runs the static adapter, the endpoint is called and the
post metadata is resolved before the final output is produced.`),Ss=c(),Kt=p("p"),qn=a(`adapter
Now, posts should have the list of posts with their metadata, as defined by you at the top of each post. E.g. If you have this at the top of a post -`),qs=c(),lt=p("pre"),Ls=c(),Ut=p("p"),Ln=a("That post\u2019s metadata would be an object and look like this"),Rs=c(),it=p("pre"),Ws=c(),Qt=p("p"),Rn=a("You can then render whatever metadata you want to."),Ys=c(),rt=p("pre"),Bs=c(),ct=p("h3"),Vt=p("a"),Wn=a("Step 4 - Add a layout component for the blog"),Ns=c(),M=p("p"),Yn=a("If you have a header which you want to show for each page in the blog/site, you can add that as a layout component. For e.g. adding "),He=p("code"),Bn=a("routes/__layout.svelte"),Nn=a(" file, with a "),E&&E.c(),$n=a(" component in it, will wrap every route content inside this layout component. Example layout component -"),$s=c(),ut=p("pre"),Fs=c(),dt=p("p"),Fn=a("You can read more about svelte kit layout components here - "),ht=p("a"),Gn=a("https://kit.svelte.dev/docs#layouts"),Gs=c(),ft=p("h3"),Xt=p("a"),zn=a("Step 5 - Add a layout component for individual blog posts"),zs=c(),Zt=p("p"),Jn=a("This was trickier than i thought. At least my first attempt. And when i found the solution, it was not as tricky as i thought. At least not as tricky as trying to read this paragraph."),Js=c(),P=p("p"),Kn=a("I thought i would utilize svelte-kit\u2019s layout capability, with "),Me=p("code"),Un=a("__layout.svelte"),Qn=a(" file in the blog folder. But I wanted the layout component for blog post to take care of the post title. My first attempt was to use the "),Se=p("code"),Vn=a("load"),Xn=a(" function provided by "),qe=p("code"),Zn=a("svelte-kit"),to=a(" and then fetching the metadata for the post by importing that file. That worked during development but didn\u2019t work with static adapter. Since i was importing file dynamically, it needed a server."),Ks=c(),kt=p("p"),eo=a("Then i found out about layouts in mdsvex. All i had to do was add a svelte component somewhere, say lib folder, and then point mdsvex to that file. That is done in "),Le=p("code"),so=a("mdsvex.config.cjs"),Us=c(),mt=p("pre"),Qs=c(),te=p("p"),ao=a("And the BlogLayout.svelte component looked like this"),Vs=c(),vt=p("pre"),Xs=c(),ee=p("p"),no=a("Now all my blog posts had a title and date at the top. The layout component also enabled styling the container for each post, if i wanted to."),Zs=c(),W=p("p"),oo=a("More about "),Re=p("code"),po=a("mdsvex"),lo=a(" layout components here - "),yt=p("a"),io=a("https://mdsvex.pngwn.io/docs#layouts"),ta=c(),wt=p("h3"),se=p("a"),ro=a("Step 6 - Hosting the blog on github"),ea=c(),F=p("p"),co=a("Github allows static site hosting in 2 ways - either as a user site or as a project site. You can read more about github hosting "),bt=p("a"),uo=a("here"),ho=a(". I have my site hosted as a user site. Which meant i had to push the output of the static adapter to my master branch. But what is this static adapter thingy?"),sa=c(),gt=p("p"),fo=a("svelte kit provides various adapters to convert your site in ways which are suited for your deployment environemnt. In our case, we want the site to be hosted on github (or netlify etc.) as a static site. No server. Just html pages with some css and js. For that, we use the "),_t=p("a"),ko=a("svelte-kit static adapter"),aa=c(),Et=p("h4"),ae=p("a"),mo=a("Install svelte static adapter"),na=c(),ne=p("p"),vo=a("We can install the static adapter from npm."),oa=c(),jt=p("pre"),pa=c(),oe=p("p"),yo=a("We then have to change the svelte config to tell it to use static adapter -"),la=c(),Pt=p("pre"),ia=c(),xt=p("h4"),pe=p("a"),wo=a("Generate content to host as static site"),ra=c(),G=p("p"),bo=a("Once we have setup the static adapter, calling "),We=p("code"),go=a("npm run build"),_o=a(" on the terminal should generate the build folder."),ca=c(),At=p("pre"),ua=c(),x=p("p"),Eo=a("We can test the build by going inside the build folder and using "),Ye=p("code"),jo=a("serve"),Po=a(" or any other server to serve the files. "),Be=p("code"),xo=a("serve"),Ao=a(" starts a server on "),Ne=p("code"),Oo=a("localhost:5000"),Do=a(" by default."),da=c(),Ot=p("h4"),le=p("a"),Co=a("Install gh-pages and deploy site"),ha=c(),z=p("p"),To=a("Now that we have the built files, we have to push them to the master branch, for user site, or to the "),$e=p("code"),Io=a("gh-pages"),Ho=a(" branch for a project site. Once we update the branch and push to github, github will then deploy the files for us and we should be able to see our site come alive."),fa=c(),Y=p("p"),Fe=p("code"),Mo=a("gh-pages"),So=a(" is a handy tool to push the contents of any folder to any other branch in your repository. Installing "),Ge=p("code"),qo=a("gh-pages"),Lo=a(" is straight forward with npm."),ka=c(),Dt=p("pre"),ma=c(),ie=p("p"),Ro=a("I then added an npm script to make deployment easy -"),va=c(),Ct=p("pre"),ya=c(),A=p("p"),Wo=a("If you are deploying a project site, you can remove the "),ze=p("code"),Yo=a("-b master"),Bo=a(" flag from gh-pages command. "),Je=p("code"),No=a("gh-pages"),$o=a(" pushes to "),Ke=p("code"),Fo=a("gh-pages"),Go=a(" branch by default."),wa=c(),Tt=p("p"),Ue=p("code"),zo=a("gh-pages"),Jo=a(" will also push the branch to remote. So if all goes well, you should be able to see your site live after some time."),ba=c(),It=p("h4"),J=p("a"),Ko=a("Fixing _apps/"),Qe=p("em"),Uo=a(".js and _apps/"),Qo=a(".css paths returning 404 on the deployed site"),ga=c(),v=p("p"),Vo=a("After you deploy your site by pushing the github branch, you will probably see your site looking a little different to what it looks on your development environment. That\u2019s because some of the js and css is missing. If you open the devtools and then the network tab, a number of js and css files might be returning 404. All of those would be serving files from inside the "),Ve=p("code"),Xo=a("__app"),Zo=a(" folder. That is because github does not deploy the "),Xe=p("code"),tp=a("__app"),ep=a(" folder. All folders starting with an "),Ze=p("code"),sp=a("_"),ap=a(" are to be ignored for sites built with "),Ht=p("a"),np=a("jekyll"),op=a(". Read more about it "),Mt=p("a"),pp=a("here"),lp=a("."),_a=c(),b=p("p"),ip=a("To get around the problem, we have to add an empty file named "),ts=p("code"),rp=a(".nojekyll"),cp=a(" to our static folder. "),es=p("code"),up=a("npm run build"),dp=a(" will then copy that file to the "),ss=p("code"),hp=a("build"),fp=a(" folder and "),as=p("code"),kp=a("gh-pages"),mp=a(" will then push that file to the required github branch."),Ea=c(),k=p("p"),vp=a("You might find that it still doesn\u2019t work. Mainly because "),ns=p("code"),yp=a("gh-pages"),wp=a(" is not pushing the "),os=p("code"),bp=a(".nojekyll"),gp=a(" file to the github branch, because "),ps=p("code"),_p=a("gh-pages"),Ep=a(" tool ignores all files starting with a "),ls=p("code"),jp=a("."),Pp=a(" (dot). We can tell the "),is=p("code"),xp=a("gh-pages"),Ap=a(" tool to also push dot files from the build folder by using the "),rs=p("code"),Op=a("-t"),Dp=a(" flag. If you copied the deploy command from above, it\u2019s already there."),ja=c(),re=p("p"),Cp=a("That is it! Go ahead and add a lot of blog posts as markdown files and deploy to your site. I am kidding. Building the blog with svelte kit was fun though."),Pa=c(),St=p("p"),Tp=a("Link to final code - "),qt=p("a"),Ip=a("https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),this.h()},l(t){f=l(t,"P",{});var o=i(f);y=n(o,"After reading this post, you should be able to make a blog using svelte kit, and host it on github or any other hosting service of your choice. You can write your posts as markdown files."),o.forEach(e),D=u(t),m=l(t,"P",{});var ue=i(m);C=n(ue,"This post assumes that you know what svelte is and also what hosting a static site means. You can read more about svelte here - "),h=l(ue,"A",{href:!0,rel:!0});var Yp=i(h);_=n(Yp,"https://svelte.dev."),Yp.forEach(e),Rt=n(ue," And more about svelte kit here - "),X=l(ue,"A",{href:!0,rel:!0});var Bp=i(X);Ha=n(Bp,"https://kit.svelte.dev"),Bp.forEach(e),Ma=n(ue,"."),ue.forEach(e),hs=u(t),Wt=l(t,"P",{});var Np=i(Wt);Sa=n(Np,"I recently moved by teeny tiny unmaintained blog from gatsby to svelte kit. Removing gatsby removed a lot of complexity which comes with gatsby. I no longer understood what was going on under the hood and was too scared to upgrade gatsby."),Np.forEach(e),fs=u(t),Yt=l(t,"P",{});var $p=i(Yt);qa=n($p,"Switching to svelte-kit was relatively straight forward except for a few quirks. The quirks mainly had to do with rendering markdown as html and figuring out how to publish the final site through github."),$p.forEach(e),ks=u(t),B=l(t,"P",{});var xa=i(B);La=n(xa,"If you don\u2019t want to read the whole article, you can checkout the final code here - "),Z=l(xa,"A",{href:!0,rel:!0});var Fp=i(Z);Ra=n(Fp,"https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),Fp.forEach(e),Wa=n(xa,"."),xa.forEach(e),ms=u(t),tt=l(t,"H3",{id:!0});var Gp=i(tt);Bt=l(Gp,"A",{href:!0});var zp=i(Bt);Ya=n(zp,"Step 1 - Setup svelte kit template"),zp.forEach(e),Gp.forEach(e),vs=u(t),N=l(t,"P",{});var Aa=i(N);Ba=n(Aa,"You can get started with svelte kit template using their "),ke=l(Aa,"CODE",{});var Jp=i(ke);Na=n(Jp,"npm init"),Jp.forEach(e),$a=n(Aa," command -"),Aa.forEach(e),ys=u(t),et=l(t,"PRE",{class:!0});var zi=i(et);zi.forEach(e),ws=u(t),R=l(t,"P",{});var cs=i(R);Fa=n(cs,"When you run "),me=l(cs,"CODE",{});var Kp=i(me);Ga=n(Kp,"npm init svelte@next <your_project_name>"),Kp.forEach(e),za=n(cs,", you will be asked a set of questions. E.g. Do you want to enable typescript in this project? Once you answer all the questions, the command will create a set of files in the "),ve=l(cs,"YOUR_PROJECT_NAME",{});var Up=i(ve);Ja=n(Up,"folder. Think of the command as a helper which chooses the right template for you."),Up.forEach(e),cs.forEach(e),bs=u(t),Nt=l(t,"P",{});var Qp=i(Nt);Ka=n(Qp,"Once the init command creates the files, you can go inside the folder and install the npm dependencies. The init command does not install the dependencies. It only specifies the list of dependencies in the package.json file."),Qp.forEach(e),gs=u(t),w=l(t,"P",{});var S=i(w);Ua=n(S,"After the dependencies are installed, you can invoke the "),ye=l(S,"CODE",{});var Vp=i(ye);Qa=n(Vp,"dev"),Vp.forEach(e),Va=n(S," script which is already defined in your "),we=l(S,"CODE",{});var Xp=i(we);Xa=n(Xp,"package.json"),Xp.forEach(e),Za=n(S," file by the "),be=l(S,"CODE",{});var Zp=i(be);tn=n(Zp,"init"),Zp.forEach(e),en=n(S," command - "),ge=l(S,"CODE",{});var tl=i(ge);sn=n(tl,"npm run dev -- --open"),tl.forEach(e),an=n(S,". This should start a localhost server on port 3000."),S.forEach(e),_s=u(t),st=l(t,"H3",{id:!0});var el=i(st);$t=l(el,"A",{href:!0});var sl=i($t);nn=n(sl,"Step 2 - Add mdsvex to convert markdown files to html"),sl.forEach(e),el.forEach(e),Es=u(t),at=l(t,"PRE",{class:!0});var Ji=i(at);Ji.forEach(e),js=u(t),T=l(t,"P",{});var Lt=i(T);_e=l(Lt,"CODE",{});var al=i(_e);on=n(al,"svelte-add mdsvex"),al.forEach(e),pn=n(Lt," will make necessary changes to "),Ee=l(Lt,"CODE",{});var nl=i(Ee);ln=n(nl,"package.json"),nl.forEach(e),rn=n(Lt," to add the required dependencies, add a mdsvex config file and change the "),je=l(Lt,"CODE",{});var ol=i(je);cn=n(ol,"svelte.config"),ol.forEach(e),un=n(Lt," file to add mdsvex as a preprocessor."),Lt.forEach(e),Ps=u(t),Ft=l(t,"P",{});var pl=i(Ft);dn=n(pl,"You will have to restart the dev server for mdsvex preprocessor to kick in."),pl.forEach(e),xs=u(t),I=l(t,"P",{});var de=i(I);hn=n(de,"Try adding a markdown file in your routes folder and going to the route pointed by the markdown file name. E.g. Add a file "),Pe=l(de,"CODE",{});var ll=i(Pe);fn=n(ll,"src/routes/my-awesome-post.md"),ll.forEach(e),kn=n(de," and put some content in there. You should be able to view that content on "),xe=l(de,"CODE",{});var il=i(xe);mn=n(il,"localhost:3000/my-awesome-post"),il.forEach(e),vn=n(de,"."),de.forEach(e),As=u(t),nt=l(t,"H3",{id:!0});var rl=i(nt);Gt=l(rl,"A",{href:!0});var cl=i(Gt);yn=n(cl,"Step 3 - Show a list of all blog posts on home page"),cl.forEach(e),rl.forEach(e),Os=u(t),zt=l(t,"P",{});var ul=i(zt);wn=n(ul,"We want to collect all our markdown files and show the list of blog posts on the home page or on some other path, so that our users can browse the super amazing content we publish."),ul.forEach(e),Ds=u(t),H=l(t,"P",{});var he=i(H);bn=n(he,"We will use "),Ae=l(he,"CODE",{});var dl=i(Ae);gn=n(dl,"import.meta.glob"),dl.forEach(e),_n=n(he," to get the metadata for each of the markdown files. We will create an endpoint to get the metadata for a post. If we try to get the metadata using a glob pattern in our "),Oe=l(he,"CODE",{});var hl=i(Oe);En=n(hl,"routes/index.svelte"),hl.forEach(e),jn=n(he," file, it will load all the blog posts upfront too. Which might be a disaster if we have too many blogs posts or our posts are heavy."),he.forEach(e),Cs=u(t),j=l(t,"P",{});var K=i(j);Pn=n(K,`So we create an endpoint which returns the metadata for blogs in
`),De=l(K,"CODE",{});var fl=i(De);xn=n(fl,"/src/routes/blog/index.json.ts"),fl.forEach(e),An=n(K,` file. It won\u2019t work if you name your file
`),Ce=l(K,"CODE",{});var kl=i(Ce);On=n(kl,"index.json.js"),kl.forEach(e),Dn=n(K," and had selected typescript when creating the project with "),Te=l(K,"CODE",{});var ml=i(Te);Cn=n(ml,"npm init svelte@next"),ml.forEach(e),Tn=n(K,"."),K.forEach(e),Ts=u(t),ot=l(t,"PRE",{class:!0});var Ki=i(ot);Ki.forEach(e),Is=u(t),$=l(t,"P",{});var Oa=i($);In=n(Oa,"And then fetch the metadata for a post in our "),Ie=l(Oa,"CODE",{});var vl=i(Ie);Hn=n(vl,"src/routes/index.svelte"),vl.forEach(e),Mn=n(Oa,` file, or
wherever you show the list of blog posts.`),Oa.forEach(e),Hs=u(t),pt=l(t,"PRE",{class:!0});var Ui=i(pt);Ui.forEach(e),Ms=u(t),Jt=l(t,"P",{});var yl=i(Jt);Sn=n(yl,`Does having an endpoint mean that we need a server too? Ans - No. When we run
the build script, which runs the static adapter, the endpoint is called and the
post metadata is resolved before the final output is produced.`),yl.forEach(e),Ss=u(t),Kt=l(t,"P",{});var wl=i(Kt);qn=n(wl,`adapter
Now, posts should have the list of posts with their metadata, as defined by you at the top of each post. E.g. If you have this at the top of a post -`),wl.forEach(e),qs=u(t),lt=l(t,"PRE",{class:!0});var Qi=i(lt);Qi.forEach(e),Ls=u(t),Ut=l(t,"P",{});var bl=i(Ut);Ln=n(bl,"That post\u2019s metadata would be an object and look like this"),bl.forEach(e),Rs=u(t),it=l(t,"PRE",{class:!0});var Vi=i(it);Vi.forEach(e),Ws=u(t),Qt=l(t,"P",{});var gl=i(Qt);Rn=n(gl,"You can then render whatever metadata you want to."),gl.forEach(e),Ys=u(t),rt=l(t,"PRE",{class:!0});var Xi=i(rt);Xi.forEach(e),Bs=u(t),ct=l(t,"H3",{id:!0});var _l=i(ct);Vt=l(_l,"A",{href:!0});var El=i(Vt);Wn=n(El,"Step 4 - Add a layout component for the blog"),El.forEach(e),_l.forEach(e),Ns=u(t),M=l(t,"P",{});var fe=i(M);Yn=n(fe,"If you have a header which you want to show for each page in the blog/site, you can add that as a layout component. For e.g. adding "),He=l(fe,"CODE",{});var jl=i(He);Bn=n(jl,"routes/__layout.svelte"),jl.forEach(e),Nn=n(fe," file, with a "),E&&E.l(fe),$n=n(fe," component in it, will wrap every route content inside this layout component. Example layout component -"),fe.forEach(e),$s=u(t),ut=l(t,"PRE",{class:!0});var Zi=i(ut);Zi.forEach(e),Fs=u(t),dt=l(t,"P",{});var Mp=i(dt);Fn=n(Mp,"You can read more about svelte kit layout components here - "),ht=l(Mp,"A",{href:!0,rel:!0});var Pl=i(ht);Gn=n(Pl,"https://kit.svelte.dev/docs#layouts"),Pl.forEach(e),Mp.forEach(e),Gs=u(t),ft=l(t,"H3",{id:!0});var xl=i(ft);Xt=l(xl,"A",{href:!0});var Al=i(Xt);zn=n(Al,"Step 5 - Add a layout component for individual blog posts"),Al.forEach(e),xl.forEach(e),zs=u(t),Zt=l(t,"P",{});var Ol=i(Zt);Jn=n(Ol,"This was trickier than i thought. At least my first attempt. And when i found the solution, it was not as tricky as i thought. At least not as tricky as trying to read this paragraph."),Ol.forEach(e),Js=u(t),P=l(t,"P",{});var U=i(P);Kn=n(U,"I thought i would utilize svelte-kit\u2019s layout capability, with "),Me=l(U,"CODE",{});var Dl=i(Me);Un=n(Dl,"__layout.svelte"),Dl.forEach(e),Qn=n(U," file in the blog folder. But I wanted the layout component for blog post to take care of the post title. My first attempt was to use the "),Se=l(U,"CODE",{});var Cl=i(Se);Vn=n(Cl,"load"),Cl.forEach(e),Xn=n(U," function provided by "),qe=l(U,"CODE",{});var Tl=i(qe);Zn=n(Tl,"svelte-kit"),Tl.forEach(e),to=n(U," and then fetching the metadata for the post by importing that file. That worked during development but didn\u2019t work with static adapter. Since i was importing file dynamically, it needed a server."),U.forEach(e),Ks=u(t),kt=l(t,"P",{});var Sp=i(kt);eo=n(Sp,"Then i found out about layouts in mdsvex. All i had to do was add a svelte component somewhere, say lib folder, and then point mdsvex to that file. That is done in "),Le=l(Sp,"CODE",{});var Il=i(Le);so=n(Il,"mdsvex.config.cjs"),Il.forEach(e),Sp.forEach(e),Us=u(t),mt=l(t,"PRE",{class:!0});var tr=i(mt);tr.forEach(e),Qs=u(t),te=l(t,"P",{});var Hl=i(te);ao=n(Hl,"And the BlogLayout.svelte component looked like this"),Hl.forEach(e),Vs=u(t),vt=l(t,"PRE",{class:!0});var er=i(vt);er.forEach(e),Xs=u(t),ee=l(t,"P",{});var Ml=i(ee);no=n(Ml,"Now all my blog posts had a title and date at the top. The layout component also enabled styling the container for each post, if i wanted to."),Ml.forEach(e),Zs=u(t),W=l(t,"P",{});var us=i(W);oo=n(us,"More about "),Re=l(us,"CODE",{});var Sl=i(Re);po=n(Sl,"mdsvex"),Sl.forEach(e),lo=n(us," layout components here - "),yt=l(us,"A",{href:!0,rel:!0});var ql=i(yt);io=n(ql,"https://mdsvex.pngwn.io/docs#layouts"),ql.forEach(e),us.forEach(e),ta=u(t),wt=l(t,"H3",{id:!0});var Ll=i(wt);se=l(Ll,"A",{href:!0});var Rl=i(se);ro=n(Rl,"Step 6 - Hosting the blog on github"),Rl.forEach(e),Ll.forEach(e),ea=u(t),F=l(t,"P",{});var Da=i(F);co=n(Da,"Github allows static site hosting in 2 ways - either as a user site or as a project site. You can read more about github hosting "),bt=l(Da,"A",{href:!0,rel:!0});var Wl=i(bt);uo=n(Wl,"here"),Wl.forEach(e),ho=n(Da,". I have my site hosted as a user site. Which meant i had to push the output of the static adapter to my master branch. But what is this static adapter thingy?"),Da.forEach(e),sa=u(t),gt=l(t,"P",{});var qp=i(gt);fo=n(qp,"svelte kit provides various adapters to convert your site in ways which are suited for your deployment environemnt. In our case, we want the site to be hosted on github (or netlify etc.) as a static site. No server. Just html pages with some css and js. For that, we use the "),_t=l(qp,"A",{href:!0,rel:!0});var Yl=i(_t);ko=n(Yl,"svelte-kit static adapter"),Yl.forEach(e),qp.forEach(e),aa=u(t),Et=l(t,"H4",{id:!0});var Bl=i(Et);ae=l(Bl,"A",{href:!0});var Nl=i(ae);mo=n(Nl,"Install svelte static adapter"),Nl.forEach(e),Bl.forEach(e),na=u(t),ne=l(t,"P",{});var $l=i(ne);vo=n($l,"We can install the static adapter from npm."),$l.forEach(e),oa=u(t),jt=l(t,"PRE",{class:!0});var sr=i(jt);sr.forEach(e),pa=u(t),oe=l(t,"P",{});var Fl=i(oe);yo=n(Fl,"We then have to change the svelte config to tell it to use static adapter -"),Fl.forEach(e),la=u(t),Pt=l(t,"PRE",{class:!0});var ar=i(Pt);ar.forEach(e),ia=u(t),xt=l(t,"H4",{id:!0});var Gl=i(xt);pe=l(Gl,"A",{href:!0});var zl=i(pe);wo=n(zl,"Generate content to host as static site"),zl.forEach(e),Gl.forEach(e),ra=u(t),G=l(t,"P",{});var Ca=i(G);bo=n(Ca,"Once we have setup the static adapter, calling "),We=l(Ca,"CODE",{});var Jl=i(We);go=n(Jl,"npm run build"),Jl.forEach(e),_o=n(Ca," on the terminal should generate the build folder."),Ca.forEach(e),ca=u(t),At=l(t,"PRE",{class:!0});var nr=i(At);nr.forEach(e),ua=u(t),x=l(t,"P",{});var Q=i(x);Eo=n(Q,"We can test the build by going inside the build folder and using "),Ye=l(Q,"CODE",{});var Kl=i(Ye);jo=n(Kl,"serve"),Kl.forEach(e),Po=n(Q," or any other server to serve the files. "),Be=l(Q,"CODE",{});var Ul=i(Be);xo=n(Ul,"serve"),Ul.forEach(e),Ao=n(Q," starts a server on "),Ne=l(Q,"CODE",{});var Ql=i(Ne);Oo=n(Ql,"localhost:5000"),Ql.forEach(e),Do=n(Q," by default."),Q.forEach(e),da=u(t),Ot=l(t,"H4",{id:!0});var Vl=i(Ot);le=l(Vl,"A",{href:!0});var Xl=i(le);Co=n(Xl,"Install gh-pages and deploy site"),Xl.forEach(e),Vl.forEach(e),ha=u(t),z=l(t,"P",{});var Ta=i(z);To=n(Ta,"Now that we have the built files, we have to push them to the master branch, for user site, or to the "),$e=l(Ta,"CODE",{});var Zl=i($e);Io=n(Zl,"gh-pages"),Zl.forEach(e),Ho=n(Ta," branch for a project site. Once we update the branch and push to github, github will then deploy the files for us and we should be able to see our site come alive."),Ta.forEach(e),fa=u(t),Y=l(t,"P",{});var ds=i(Y);Fe=l(ds,"CODE",{});var ti=i(Fe);Mo=n(ti,"gh-pages"),ti.forEach(e),So=n(ds," is a handy tool to push the contents of any folder to any other branch in your repository. Installing "),Ge=l(ds,"CODE",{});var ei=i(Ge);qo=n(ei,"gh-pages"),ei.forEach(e),Lo=n(ds," is straight forward with npm."),ds.forEach(e),ka=u(t),Dt=l(t,"PRE",{class:!0});var or=i(Dt);or.forEach(e),ma=u(t),ie=l(t,"P",{});var si=i(ie);Ro=n(si,"I then added an npm script to make deployment easy -"),si.forEach(e),va=u(t),Ct=l(t,"PRE",{class:!0});var pr=i(Ct);pr.forEach(e),ya=u(t),A=l(t,"P",{});var V=i(A);Wo=n(V,"If you are deploying a project site, you can remove the "),ze=l(V,"CODE",{});var ai=i(ze);Yo=n(ai,"-b master"),ai.forEach(e),Bo=n(V," flag from gh-pages command. "),Je=l(V,"CODE",{});var ni=i(Je);No=n(ni,"gh-pages"),ni.forEach(e),$o=n(V," pushes to "),Ke=l(V,"CODE",{});var oi=i(Ke);Fo=n(oi,"gh-pages"),oi.forEach(e),Go=n(V," branch by default."),V.forEach(e),wa=u(t),Tt=l(t,"P",{});var Lp=i(Tt);Ue=l(Lp,"CODE",{});var pi=i(Ue);zo=n(pi,"gh-pages"),pi.forEach(e),Jo=n(Lp," will also push the branch to remote. So if all goes well, you should be able to see your site live after some time."),Lp.forEach(e),ba=u(t),It=l(t,"H4",{id:!0});var li=i(It);J=l(li,"A",{href:!0});var Ia=i(J);Ko=n(Ia,"Fixing _apps/"),Qe=l(Ia,"EM",{});var ii=i(Qe);Uo=n(ii,".js and _apps/"),ii.forEach(e),Qo=n(Ia,".css paths returning 404 on the deployed site"),Ia.forEach(e),li.forEach(e),ga=u(t),v=l(t,"P",{});var O=i(v);Vo=n(O,"After you deploy your site by pushing the github branch, you will probably see your site looking a little different to what it looks on your development environment. That\u2019s because some of the js and css is missing. If you open the devtools and then the network tab, a number of js and css files might be returning 404. All of those would be serving files from inside the "),Ve=l(O,"CODE",{});var ri=i(Ve);Xo=n(ri,"__app"),ri.forEach(e),Zo=n(O," folder. That is because github does not deploy the "),Xe=l(O,"CODE",{});var ci=i(Xe);tp=n(ci,"__app"),ci.forEach(e),ep=n(O," folder. All folders starting with an "),Ze=l(O,"CODE",{});var ui=i(Ze);sp=n(ui,"_"),ui.forEach(e),ap=n(O," are to be ignored for sites built with "),Ht=l(O,"A",{href:!0,rel:!0});var di=i(Ht);np=n(di,"jekyll"),di.forEach(e),op=n(O,". Read more about it "),Mt=l(O,"A",{href:!0,rel:!0});var hi=i(Mt);pp=n(hi,"here"),hi.forEach(e),lp=n(O,"."),O.forEach(e),_a=u(t),b=l(t,"P",{});var q=i(b);ip=n(q,"To get around the problem, we have to add an empty file named "),ts=l(q,"CODE",{});var fi=i(ts);rp=n(fi,".nojekyll"),fi.forEach(e),cp=n(q," to our static folder. "),es=l(q,"CODE",{});var ki=i(es);up=n(ki,"npm run build"),ki.forEach(e),dp=n(q," will then copy that file to the "),ss=l(q,"CODE",{});var mi=i(ss);hp=n(mi,"build"),mi.forEach(e),fp=n(q," folder and "),as=l(q,"CODE",{});var vi=i(as);kp=n(vi,"gh-pages"),vi.forEach(e),mp=n(q," will then push that file to the required github branch."),q.forEach(e),Ea=u(t),k=l(t,"P",{});var g=i(k);vp=n(g,"You might find that it still doesn\u2019t work. Mainly because "),ns=l(g,"CODE",{});var yi=i(ns);yp=n(yi,"gh-pages"),yi.forEach(e),wp=n(g," is not pushing the "),os=l(g,"CODE",{});var wi=i(os);bp=n(wi,".nojekyll"),wi.forEach(e),gp=n(g," file to the github branch, because "),ps=l(g,"CODE",{});var bi=i(ps);_p=n(bi,"gh-pages"),bi.forEach(e),Ep=n(g," tool ignores all files starting with a "),ls=l(g,"CODE",{});var gi=i(ls);jp=n(gi,"."),gi.forEach(e),Pp=n(g," (dot). We can tell the "),is=l(g,"CODE",{});var _i=i(is);xp=n(_i,"gh-pages"),_i.forEach(e),Ap=n(g," tool to also push dot files from the build folder by using the "),rs=l(g,"CODE",{});var Ei=i(rs);Op=n(Ei,"-t"),Ei.forEach(e),Dp=n(g," flag. If you copied the deploy command from above, it\u2019s already there."),g.forEach(e),ja=u(t),re=l(t,"P",{});var ji=i(re);Cp=n(ji,"That is it! Go ahead and add a lot of blog posts as markdown files and deploy to your site. I am kidding. Building the blog with svelte kit was fun though."),ji.forEach(e),Pa=u(t),St=l(t,"P",{});var Rp=i(St);Tp=n(Rp,"Link to final code - "),qt=l(Rp,"A",{href:!0,rel:!0});var Pi=i(qt);Ip=n(Pi,"https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),Pi.forEach(e),Rp.forEach(e),this.h()},h(){d(h,"href","https://svelte.dev."),d(h,"rel","nofollow"),d(X,"href","https://kit.svelte.dev"),d(X,"rel","nofollow"),d(Z,"href","https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),d(Z,"rel","nofollow"),d(Bt,"href","#step-1---setup-svelte-kit-template"),d(tt,"id","step-1---setup-svelte-kit-template"),d(et,"class","language-bash"),d($t,"href","#step-2---add-mdsvex-to-convert-markdown-files-to-html"),d(st,"id","step-2---add-mdsvex-to-convert-markdown-files-to-html"),d(at,"class","language-bash"),d(Gt,"href","#step-3---show-a-list-of-all-blog-posts-on-home-page"),d(nt,"id","step-3---show-a-list-of-all-blog-posts-on-home-page"),d(ot,"class","language-javascript"),d(pt,"class","language-html"),d(lt,"class","language-undefined"),d(it,"class","language-json"),d(rt,"class","language-html"),d(Vt,"href","#step-4---add-a-layout-component-for-the-blog"),d(ct,"id","step-4---add-a-layout-component-for-the-blog"),d(ut,"class","language-html"),d(ht,"href","https://kit.svelte.dev/docs#layouts"),d(ht,"rel","nofollow"),d(Xt,"href","#step-5---add-a-layout-component-for-individual-blog-posts"),d(ft,"id","step-5---add-a-layout-component-for-individual-blog-posts"),d(mt,"class","language-javascript"),d(vt,"class","language-html"),d(yt,"href","https://mdsvex.pngwn.io/docs#layouts"),d(yt,"rel","nofollow"),d(se,"href","#step-6---hosting-the-blog-on-github"),d(wt,"id","step-6---hosting-the-blog-on-github"),d(bt,"href","https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages"),d(bt,"rel","nofollow"),d(_t,"href","https://github.com/sveltejs/kit/tree/master/packages/adapter-static"),d(_t,"rel","nofollow"),d(ae,"href","#install-svelte-static-adapter"),d(Et,"id","install-svelte-static-adapter"),d(jt,"class","language-bash"),d(Pt,"class","language-javascript"),d(pe,"href","#generate-content-to-host-as-static-site"),d(xt,"id","generate-content-to-host-as-static-site"),d(At,"class","language-undefined"),d(le,"href","#install-gh-pages-and-deploy-site"),d(Ot,"id","install-gh-pages-and-deploy-site"),d(Dt,"class","language-bash"),d(Ct,"class","language-json"),d(J,"href","#fixing-_appsjs-and-_appscss-paths-returning-404-on-the-deployed-site"),d(It,"id","fixing-_appsjs-and-_appscss-paths-returning-404-on-the-deployed-site"),d(Ht,"href","https://jekyllrb.com/docs/"),d(Ht,"rel","nofollow"),d(Mt,"href","https://github.blog/2009-12-29-bypassing-jekyll-on-github-pages/"),d(Mt,"rel","nofollow"),d(qt,"href","https://github.com/mukeshsoni/mukeshsoni.github.io/tree/svelte"),d(qt,"rel","nofollow")},m(t,o){r(t,f,o),s(f,y),r(t,D,o),r(t,m,o),s(m,C),s(m,h),s(h,_),s(m,Rt),s(m,X),s(X,Ha),s(m,Ma),r(t,hs,o),r(t,Wt,o),s(Wt,Sa),r(t,fs,o),r(t,Yt,o),s(Yt,qa),r(t,ks,o),r(t,B,o),s(B,La),s(B,Z),s(Z,Ra),s(B,Wa),r(t,ms,o),r(t,tt,o),s(tt,Bt),s(Bt,Ya),r(t,vs,o),r(t,N,o),s(N,Ba),s(N,ke),s(ke,Na),s(N,$a),r(t,ys,o),r(t,et,o),et.innerHTML=Ti,r(t,ws,o),r(t,R,o),s(R,Fa),s(R,me),s(me,Ga),s(R,za),s(R,ve),s(ve,Ja),r(t,bs,o),r(t,Nt,o),s(Nt,Ka),r(t,gs,o),r(t,w,o),s(w,Ua),s(w,ye),s(ye,Qa),s(w,Va),s(w,we),s(we,Xa),s(w,Za),s(w,be),s(be,tn),s(w,en),s(w,ge),s(ge,sn),s(w,an),r(t,_s,o),r(t,st,o),s(st,$t),s($t,nn),r(t,Es,o),r(t,at,o),at.innerHTML=Ii,r(t,js,o),r(t,T,o),s(T,_e),s(_e,on),s(T,pn),s(T,Ee),s(Ee,ln),s(T,rn),s(T,je),s(je,cn),s(T,un),r(t,Ps,o),r(t,Ft,o),s(Ft,dn),r(t,xs,o),r(t,I,o),s(I,hn),s(I,Pe),s(Pe,fn),s(I,kn),s(I,xe),s(xe,mn),s(I,vn),r(t,As,o),r(t,nt,o),s(nt,Gt),s(Gt,yn),r(t,Os,o),r(t,zt,o),s(zt,wn),r(t,Ds,o),r(t,H,o),s(H,bn),s(H,Ae),s(Ae,gn),s(H,_n),s(H,Oe),s(Oe,En),s(H,jn),r(t,Cs,o),r(t,j,o),s(j,Pn),s(j,De),s(De,xn),s(j,An),s(j,Ce),s(Ce,On),s(j,Dn),s(j,Te),s(Te,Cn),s(j,Tn),r(t,Ts,o),r(t,ot,o),ot.innerHTML=Hi,r(t,Is,o),r(t,$,o),s($,In),s($,Ie),s(Ie,Hn),s($,Mn),r(t,Hs,o),r(t,pt,o),pt.innerHTML=Mi,r(t,Ms,o),r(t,Jt,o),s(Jt,Sn),r(t,Ss,o),r(t,Kt,o),s(Kt,qn),r(t,qs,o),r(t,lt,o),lt.innerHTML=Si,r(t,Ls,o),r(t,Ut,o),s(Ut,Ln),r(t,Rs,o),r(t,it,o),it.innerHTML=qi,r(t,Ws,o),r(t,Qt,o),s(Qt,Rn),r(t,Ys,o),r(t,rt,o),rt.innerHTML=Li,r(t,Bs,o),r(t,ct,o),s(ct,Vt),s(Vt,Wn),r(t,Ns,o),r(t,M,o),s(M,Yn),s(M,He),s(He,Bn),s(M,Nn),E&&E.m(M,null),s(M,$n),r(t,$s,o),r(t,ut,o),ut.innerHTML=Ri,r(t,Fs,o),r(t,dt,o),s(dt,Fn),s(dt,ht),s(ht,Gn),r(t,Gs,o),r(t,ft,o),s(ft,Xt),s(Xt,zn),r(t,zs,o),r(t,Zt,o),s(Zt,Jn),r(t,Js,o),r(t,P,o),s(P,Kn),s(P,Me),s(Me,Un),s(P,Qn),s(P,Se),s(Se,Vn),s(P,Xn),s(P,qe),s(qe,Zn),s(P,to),r(t,Ks,o),r(t,kt,o),s(kt,eo),s(kt,Le),s(Le,so),r(t,Us,o),r(t,mt,o),mt.innerHTML=Wi,r(t,Qs,o),r(t,te,o),s(te,ao),r(t,Vs,o),r(t,vt,o),vt.innerHTML=Yi,r(t,Xs,o),r(t,ee,o),s(ee,no),r(t,Zs,o),r(t,W,o),s(W,oo),s(W,Re),s(Re,po),s(W,lo),s(W,yt),s(yt,io),r(t,ta,o),r(t,wt,o),s(wt,se),s(se,ro),r(t,ea,o),r(t,F,o),s(F,co),s(F,bt),s(bt,uo),s(F,ho),r(t,sa,o),r(t,gt,o),s(gt,fo),s(gt,_t),s(_t,ko),r(t,aa,o),r(t,Et,o),s(Et,ae),s(ae,mo),r(t,na,o),r(t,ne,o),s(ne,vo),r(t,oa,o),r(t,jt,o),jt.innerHTML=Bi,r(t,pa,o),r(t,oe,o),s(oe,yo),r(t,la,o),r(t,Pt,o),Pt.innerHTML=Ni,r(t,ia,o),r(t,xt,o),s(xt,pe),s(pe,wo),r(t,ra,o),r(t,G,o),s(G,bo),s(G,We),s(We,go),s(G,_o),r(t,ca,o),r(t,At,o),At.innerHTML=$i,r(t,ua,o),r(t,x,o),s(x,Eo),s(x,Ye),s(Ye,jo),s(x,Po),s(x,Be),s(Be,xo),s(x,Ao),s(x,Ne),s(Ne,Oo),s(x,Do),r(t,da,o),r(t,Ot,o),s(Ot,le),s(le,Co),r(t,ha,o),r(t,z,o),s(z,To),s(z,$e),s($e,Io),s(z,Ho),r(t,fa,o),r(t,Y,o),s(Y,Fe),s(Fe,Mo),s(Y,So),s(Y,Ge),s(Ge,qo),s(Y,Lo),r(t,ka,o),r(t,Dt,o),Dt.innerHTML=Fi,r(t,ma,o),r(t,ie,o),s(ie,Ro),r(t,va,o),r(t,Ct,o),Ct.innerHTML=Gi,r(t,ya,o),r(t,A,o),s(A,Wo),s(A,ze),s(ze,Yo),s(A,Bo),s(A,Je),s(Je,No),s(A,$o),s(A,Ke),s(Ke,Fo),s(A,Go),r(t,wa,o),r(t,Tt,o),s(Tt,Ue),s(Ue,zo),s(Tt,Jo),r(t,ba,o),r(t,It,o),s(It,J),s(J,Ko),s(J,Qe),s(Qe,Uo),s(J,Qo),r(t,ga,o),r(t,v,o),s(v,Vo),s(v,Ve),s(Ve,Xo),s(v,Zo),s(v,Xe),s(Xe,tp),s(v,ep),s(v,Ze),s(Ze,sp),s(v,ap),s(v,Ht),s(Ht,np),s(v,op),s(v,Mt),s(Mt,pp),s(v,lp),r(t,_a,o),r(t,b,o),s(b,ip),s(b,ts),s(ts,rp),s(b,cp),s(b,es),s(es,up),s(b,dp),s(b,ss),s(ss,hp),s(b,fp),s(b,as),s(as,kp),s(b,mp),r(t,Ea,o),r(t,k,o),s(k,vp),s(k,ns),s(ns,yp),s(k,wp),s(k,os),s(os,bp),s(k,gp),s(k,ps),s(ps,_p),s(k,Ep),s(k,ls),s(ls,jp),s(k,Pp),s(k,is),s(is,xp),s(k,Ap),s(k,rs),s(rs,Op),s(k,Dp),r(t,ja,o),r(t,re,o),s(re,Cp),r(t,Pa,o),r(t,St,o),s(St,Tp),s(St,qt),s(qt,Ip),ce=!0},p(t,o){E&&E.p&&(!ce||o&4)&&vr(E,Hp,t,t[2],ce?wr(Hp,t[2],o,null):yr(t[2]),null)},i(t){ce||(Di(E,t),ce=!0)},o(t){Ci(E,t),ce=!1},d(t){t&&e(f),t&&e(D),t&&e(m),t&&e(hs),t&&e(Wt),t&&e(fs),t&&e(Yt),t&&e(ks),t&&e(B),t&&e(ms),t&&e(tt),t&&e(vs),t&&e(N),t&&e(ys),t&&e(et),t&&e(ws),t&&e(R),t&&e(bs),t&&e(Nt),t&&e(gs),t&&e(w),t&&e(_s),t&&e(st),t&&e(Es),t&&e(at),t&&e(js),t&&e(T),t&&e(Ps),t&&e(Ft),t&&e(xs),t&&e(I),t&&e(As),t&&e(nt),t&&e(Os),t&&e(zt),t&&e(Ds),t&&e(H),t&&e(Cs),t&&e(j),t&&e(Ts),t&&e(ot),t&&e(Is),t&&e($),t&&e(Hs),t&&e(pt),t&&e(Ms),t&&e(Jt),t&&e(Ss),t&&e(Kt),t&&e(qs),t&&e(lt),t&&e(Ls),t&&e(Ut),t&&e(Rs),t&&e(it),t&&e(Ws),t&&e(Qt),t&&e(Ys),t&&e(rt),t&&e(Bs),t&&e(ct),t&&e(Ns),t&&e(M),E&&E.d(t),t&&e($s),t&&e(ut),t&&e(Fs),t&&e(dt),t&&e(Gs),t&&e(ft),t&&e(zs),t&&e(Zt),t&&e(Js),t&&e(P),t&&e(Ks),t&&e(kt),t&&e(Us),t&&e(mt),t&&e(Qs),t&&e(te),t&&e(Vs),t&&e(vt),t&&e(Xs),t&&e(ee),t&&e(Zs),t&&e(W),t&&e(ta),t&&e(wt),t&&e(ea),t&&e(F),t&&e(sa),t&&e(gt),t&&e(aa),t&&e(Et),t&&e(na),t&&e(ne),t&&e(oa),t&&e(jt),t&&e(pa),t&&e(oe),t&&e(la),t&&e(Pt),t&&e(ia),t&&e(xt),t&&e(ra),t&&e(G),t&&e(ca),t&&e(At),t&&e(ua),t&&e(x),t&&e(da),t&&e(Ot),t&&e(ha),t&&e(z),t&&e(fa),t&&e(Y),t&&e(ka),t&&e(Dt),t&&e(ma),t&&e(ie),t&&e(va),t&&e(Ct),t&&e(ya),t&&e(A),t&&e(wa),t&&e(Tt),t&&e(ba),t&&e(It),t&&e(ga),t&&e(v),t&&e(_a),t&&e(b),t&&e(Ea),t&&e(k),t&&e(ja),t&&e(re),t&&e(Pa),t&&e(St)}}}function _r(L){let f,y,D;const m=[L[0],Oi];let C={$$slots:{default:[gr]},$$scope:{ctx:L}};for(let h=0;h<m.length;h+=1)C=Wp(C,m[h]);return y=new br({props:C}),{c(){f=c(),cr(y.$$.fragment),this.h()},l(h){ur('[data-svelte="svelte-g5bw5m"]',document.head).forEach(e),f=u(h),dr(y.$$.fragment,h),this.h()},h(){document.title="Make a blog with svelte kit and host on github"},m(h,_){r(h,f,_),hr(y,h,_),D=!0},p(h,[_]){const Rt=_&1?fr(m,[_&1&&xi(h[0]),_&0&&xi(Oi)]):{};_&4&&(Rt.$$scope={dirty:_,ctx:h}),y.$set(Rt)},i(h){D||(Di(y.$$.fragment,h),D=!0)},o(h){Ci(y.$$.fragment,h),D=!1},d(h){h&&e(f),kr(y,h)}}}const Oi={title:"Make a blog with svelte kit and host on github",created:"2021-05-18",slug:"2021-05-81-make-blog-with-sveltekit"};function Er(L,f,y){let{$$slots:D={},$$scope:m}=f;return L.$$set=C=>{y(0,f=Wp(Wp({},f),Ai(C))),"$$scope"in C&&y(2,m=C.$$scope)},f=Ai(f),[f,D,m]}class Ar extends lr{constructor(f){super();ir(this,f,Er,_r,rr,{})}}export{Ar as default,Oi as metadata};
